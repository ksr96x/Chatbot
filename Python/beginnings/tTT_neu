import random

class ticTacToe():
    def __init__(self, player):
        self.player = player
        self.usedNumbersPlayer = []
        self.usedNumbersEnemy = []
        #self.matchfield = [["", (1, 2, 3),
        #                        (4, 5, 6),
        #                        (7, 8, 9)]]

        self.matchfield = [["", 1, 2, 3,
                                4, 5, 6,
                                7, 8, 9]]

        

    def printMatchfield(self):
        for i in range(0, 3):
            print(f"[{self.matchfield[0 + i]}][{self.matchfield[1 + i]}][{self.matchfield[2 + i]}]")

    def playMechanics(self):
        pass
    
    def setCharPlayer(self,number : int):
        #self.checkMark = True
        for i in range(len(self.matchfield)):
            for j in range(len(self.matchfield[i])):
                if self.matchfield[0][j] == number:
                    if self.checkMark == True:
                        self.matchfield[0][j] = "X"
                    else:
                        self.matchfield[0][j] = "O"

    def setCharEnemy(self, number : int): 
        for i in range(len(self.matchfield)):
            for j in range(len(self.matchfield[i])):
                if self.matchfield[0][j] == number:
                    if self.checkMark == False:
                        self.matchfield[0][j] = "X"
                    else:
                        self.matchfield[0][j] = "O"    

    def checkCharsPlayer(self, numberUsedPlayer : int):
        if numberUsedPlayer > 0 and numberUsedPlayer < 10 and numberUsedPlayer not in self.usedNumbersPlayer:
            self.usedNumbersPlayer.append(numberUsedPlayer)
            return True
        else:
            return False

    def checkCharsEnemy(self, numberUsedEnemy : int):
        if numberUsedEnemy > 0 and numberUsedEnemy < 10 and numberUsedEnemy not in self.usedNumbersEnemy:
            self.usedNumbersEnemy.append(numberUsedEnemy)
            return True
        else:
            return False


    def winConditions(self, playerLetter):
        if playerLetter == self.matchfield[0][1] and playerLetter == self.matchfield[0][2] and playerLetter == self.matchfield[0][3]:
            return True
        elif playerLetter==self.matchfield[0][4] and playerLetter==self.matchfield[0][5] and playerLetter==self.matchfield[0][6]:
            return True  
        elif playerLetter==self.matchfield[0][7] and playerLetter==self.matchfield[0][8] and playerLetter==self.matchfield[0][9]:
            return True
        elif playerLetter==self.matchfield[0][1] and playerLetter==self.matchfield[0][4] and playerLetter==self.matchfield[0][7]:
            return True
        elif playerLetter==self.matchfield[0][2] and playerLetter==self.matchfield[0][5] and playerLetter==self.matchfield[0][8]:
            return True
        elif playerLetter==self.matchfield[0][3] and playerLetter==self.matchfield[0][6] and playerLetter==self.matchfield[0][9]:
            return True
        elif playerLetter==self.matchfield[0][1] and playerLetter==self.matchfield[0][5] and playerLetter==self.matchfield[0][9]:
            return True
        elif playerLetter==self.matchfield[0][3] and playerLetter==self.matchfield[0][5] and playerLetter==self.matchfield[0][7]:
            return True
        else:
            return False

player_X = ticTacToe("X")
player_O = ticTacToe("O")

def main():
    while True:
        player = input("Choose X or O: ").upper()

        if player == "O":
            playerLetter = "O"
            player = player_O
            enemy = player_X
            enemyLetter = "X"
            ticTacToe.checkMark = False

        elif player == "X":
            player = player_X
            playerLetter = "X"
            enemy = player_O 
            enemyLetter = "O"
            ticTacToe.checkMark = True

        else:
            raise Exception("Please enter valid player.")


        while True:
            playerTurn = int(input("Choose between 1 - 9: "))

            allowedNumber = bool
            allowedNumber = player.checkCharsPlayer(playerTurn)

            if allowedNumber == True:
                if playerTurn > 0 and playerTurn < 10:
                    player.setCharPlayer(playerTurn)
                    player.usedNumbersPlayer.append(playerTurn)
                    print("Your turn: ")
                    print(player.matchfield[0][1:])
                    if player.winConditions(playerLetter):
                        print("PLAYER WON!")
                        break

            while True:
                enemyTurn = random.choice(enemy.matchfield[0][1:])
                while enemyTurn == "O" or enemyTurn == "X":
                    enemyTurn = random.choice(enemy.matchfield[0][1:])

                enemyTurn = int(enemyTurn)
                allowedNumberEnemy = bool
                allowedNumberEnemy = enemy.checkCharsEnemy(enemyTurn)

                if allowedNumberEnemy == True:
                    enemy.setCharEnemy(enemyTurn)
                    enemy.usedNumbersEnemy.append(enemyTurn)
                    print("Enemy turn: ")
                    print(enemy.matchfield[0][1:])
                    if enemy.winConditions(enemyLetter):
                        print("ENEMY WON!")
                        break
                break
            
       
            
main()
