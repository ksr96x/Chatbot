import random

class Field():
    def __init__(self):
        self.matchfield = ["", 1, 2, 3, 
                               4, 5, 6,     
                               7, 8, 9]

                            # Spielfeld:
                            # [1, 2, 3
                            #  4, 5, 6
                            #  7, 8, 9]
        
    def get_matchfield(self):
        return self.matchfield

    #def matchfield(self):
        #[0] offen, damit leichter verstÃ¤ndlich (1 = [1] ... 9 = [9])
        #self.matchfield = ["", 1, 2, 3, 
                              # 4, 5, 6,     
                               #7, 8, 9]



class PlayMechanics(Field):
    def __init__(self, playerX, playerO):
        super().__init__(self)
        self.playerX = playerX
        self.playerO = playerO

    def get_playerX(self):
        return "X"

    def get_playerO(self):
        return "O"    
        
    #Zug 
    def setChar(self, number : int):
        self.number = number
    
        if self.playerX:
            for number in self.matchfield:
                if number == self.matchfield:
                    self.get_playerX = self.matchfield[number]
        
        if self.playerO:            
            for number in self.matchfield:
                if number == self.matchfield:
                    self.get_playerO = self.matchfield[number]


class WinConditions(Field):
    def __init__(self):
        super().__init__(self)

    def win(self):
        #Kombinationen: 1,2,3; 4,5,6; 7,8,9; 1,4,7; 2,5,8; 3,6,9; 1,5,9; 3,5,7;  
        #geht wahrscheinlich einfacher 
        if "X"==self.matchfield[1] and "X"==self.matchfield[2] and "X"==self.matchfield[3]:
            print("WIN!")
        elif "X"==self.matchfield[4] and "X"==self.matchfield[5] and "X"==self.matchfield[6]:
            print("WIN!")
        elif "X"==self.matchfield[7] and "X"==self.matchfield[8] and "X"==self.matchfield[9]:
            print("WIN!")
        elif "X"==self.matchfield[1] and "X"==self.matchfield[4] and "X"==self.matchfield[7]:
            print("WIN!")
        elif "X"==self.matchfield[2] and "X"==self.matchfield[5] and "X"==self.matchfield[8]:
            print("WIN!")
        elif "X"==self.matchfield[3] and "X"==self.matchfield[6] and "X"==self.matchfield[9]:
            print("WIN!")
        elif "X"==self.matchfield[1] and "X"==self.matchfield[5] and "X"==self.matchfield[9]:
            print("WIN!")
        elif "X"==self.matchfield[3] and "X"==self.matchfield[5] and "X"==self.matchfield[7]:
            print("WIN!")
        elif "O"==self.matchfield[1] and "O"==self.matchfield[2] and "O"==self.matchfield[3]:
            print("WIN!")
        elif "O"==self.matchfield[4] and "O"==self.matchfield[5] and "O"==self.matchfield[6]:
            print("WIN!")
        elif "O"==self.matchfield[7] and "O"==self.matchfield[8] and "O"==self.matchfield[9]:
            print("WIN!")
        elif "O"==self.matchfield[1] and "O"==self.matchfield[4] and "O"==self.matchfield[7]:
            print("WIN!")
        elif "O"==self.matchfield[2] and "O"==self.matchfield[5] and "O"==self.matchfield[8]:
            print("WIN!")
        elif "O"==self.matchfield[3] and "O"==self.matchfield[6] and "O"==self.matchfield[9]:
            print("WIN!")
        elif "O"==self.matchfield[1] and "O"==self.matchfield[5] and "O"==self.matchfield[9]:
            print("WIN!")
        elif "O"==self.matchfield[3] and "O"==self.matchfield[5] and "O"==self.matchfield[7]:
            print("WIN!")
        else:
            raise Exception("Unknown win type")

    def gameWonFalse(self):
        self.gameWonFalse : bool == False

def runMainLoop():
    while True:
        player = input("Choose X or O: ").upper()

        if player == "O":
            player = PlayMechanics.get_playerO
        elif player == "X":
            player = PlayMechanics.get_playerX
        else:
            raise Exception("Please enter valid symbol")
        
        while WinConditions.gameWonFalse:
            turn = input("Choose between 1 - 9: ")
            turn = int(turn)
            if turn > 0 and turn < 10:
                turn = PlayMechanics.setChar(player, turn) 
                print(Field.get_matchfield())
                if WinConditions.win(): 
                    WinConditions.gameWonFalse == True

                enemyTurn = random.choice(Field.matchfield)
                enemyTurn = PlayMechanics.setChar(enemyTurn)
                print(Field.get_matchfield())
                if WinConditions.win(): 
                    WinConditions.gameWonFalse == True

            else:
                raise Exception("Enter valid number")       
        break

runMainLoop()

